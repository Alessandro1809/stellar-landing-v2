---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import Button from "./ui/Button.astro";



interface ButtonProps {
  text: string;
  href?: string;
  variant?: string;
  isMeetingButton?: boolean;
  target?: string;
}

interface Props {
  // Propiedades para el contenido de texto
  title?: string;
  description?: string;
  showButtons?: boolean;
  primaryButton?: ButtonProps;
  secondaryButton?: ButtonProps;
  variant?: 'primary' | 'secondary' | 'primaryCyan' | 'secondaryCyan';
  justifyContent?: string;
  showButton1?: boolean;
  showButton2?: boolean;
  
  // Propiedades para el logo
  showLogo?: boolean;
  logoImage?: ImageMetadata;
  logoAlt?: string;
  logoWidth?: number;
  logoHeight?: number;
  colSpan?: number | 'full';
  

  // Props para personalizar la estructura
  reverseLayout?: boolean;
  class?: string;
}

const {
  title = "Leading you to success with your own light!",
  description = "Ready to take your business to the next level? We have modern and high quality solutions in consulting, marketing, web development and more",
  showButtons = true,
  showButton1 = true,
  showButton2 = true,
  primaryButton = {
    text: "Contact Us",
    href: "/Contact",
    variant: "primary",
    target: "_self"
  },
  secondaryButton = {
    text: "Explore our plans",
    href: "/Pricing",
    variant: "secondary",
    target: "_self"
  },
  showLogo = true,
  logoImage = (await import("../assets/HeroLogo.svg")).default,
  logoAlt = "Hero Logo",
  logoWidth = 500,
  logoHeight = 500,
  colSpan = 6,
  justifyContent = "",
  reverseLayout = false,
  class: className = "",
} = Astro.props;

const textColumnClasses = {
  'col-span-full': colSpan === 'full',
  'col-span-6': colSpan !== 'full',
  'col-start-7': reverseLayout && colSpan !== 'full',
  'col-start-1': !reverseLayout && colSpan !== 'full',
  'self-center': true
};

const logoColumnClasses = {
  'col-span-5': true,
  'self-center': true,
  'justify-self-end': true,
  'z-10': true,
  'col-start-1': reverseLayout,
  'col-start-7': !reverseLayout
};
---

<div class:list={["relative w-full h-full mt-20 md:mt-0", className]}>
  <div class="grid grid-cols-12 gap-8 h-screen max-w-7xl mx-auto">
    <!-- Columna de texto -->
    <div class:list={textColumnClasses}>
      <slot name="content">
        <h1 class="text-5xl md:text-6xl font-bold text-white mb-6">
          {title}
        </h1>
        <p class="text-lg md:text-xl text-gray-200 mb-8">
          {description}
        </p>
        {showButtons && (
          <div class:list={[
            'flex gap-4 flex-wrap md:flex-nowrap',
            justifyContent && `justify-${justifyContent}`
          ]}>
            {showButton1 && (
              <Button 
                variant="primaryCyan" 
                href={primaryButton.href || ""}
                target={primaryButton.target || "_self"}
                class="w-full md:w-auto"
              >
                {primaryButton.text}
              </Button>
            )}
            {showButton2 && (
             <Button 
                variant="secondary" 
                href={secondaryButton.href || ""}
                target={secondaryButton.target || "_self"}
                class="w-full md:w-auto"
             >
                {secondaryButton.text}
             </Button>
            )}
          </div>
        )}
      </slot>
    </div>

    <!-- Columna del logo -->
    {showLogo && (
      <div class:list={logoColumnClasses}>
        <slot name="logo">
          <div class="animated-gradient">
            <Image 
              src={logoImage}
              alt={logoAlt}
              class="w-full max-w-md relative z-10"
              width={logoWidth}
              height={logoHeight}
            />
          </div>
        </slot>
      </div>
    )}
  </div>
</div>

<style>
  .animated-gradient {
    position: relative;
    isolation: isolate;
  }

  .animated-gradient::before {
    content: '';
    position: absolute;
    inset: -20%;
    background: linear-gradient(
      25deg,
      #244fa54b,
      #0b1a3e46,
      #244fa559,
      #0b1a3e9d
    );
    background-size: 400% 400%;
    animation: gradient 7s ease infinite;
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    filter: blur(24px);
  }

  @keyframes gradient {
    0% {
      background-position: 0% 50%;
      border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }
    50% {
      background-position: 70% 50%;
      border-radius: 70% 30% 30% 70% / 70% 70% 30% 30%;
    }
    100% {
      background-position: 0% 50%;
      border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }
  }

  @media (max-width: 768px) {
    .grid {
      grid-template-columns: 1fr;
      grid-template-rows: auto auto;
      gap: 2rem;
      padding: 1rem;
      height: auto;
      min-height: 100vh;
    }

    .col-span-6,
    .col-span-5 {
      @apply col-span-full text-center;
    }

    .col-span-5 {
      @apply block justify-self-center max-w-[300px] mx-auto;
    }

    .flex {
      @apply justify-center;
    }
  }
</style>



