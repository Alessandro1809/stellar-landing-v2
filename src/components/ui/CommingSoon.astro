---

import { Particles } from "@/components/shadcn/Particles";
import { BorderBeam } from "@/components/shadcn/BorderBeam";
import Button from "@/components/ui/Button.astro";


interface Props {
    title?: {
        prefix?: string;
        highlighted?: string;
        suffix?: string;
    };
    description?: string;
    features?: string[];
    additionalText?: string;
    callToAction?: {
        text: string;
        subtext: string;
    };
}

const secondaryButton = {
    href: "#",
    text: "Subscribe"
}

const {
    title = {
        prefix: "Coming Soon:",
        highlighted: "Digital Marketing",
        suffix: "Plans designed for all businesses!"
    },
    description = "We know that every business is unique, and that's why we're preparing comprehensive digital marketing plans that adapt to the needs of small, medium, and large companies. Whether you want to boost your online presence, increase your sales, or strengthen your brand, our new packages will offer everything necessary to succeed in the digital world.",
    features = [
        "Advanced strategies to improve your visibility and attract organic customers.",
        "Effective advertising campaigns on social media and Google Ads to maximize your reach.",
        "High-impact branding to give your business a unique and professional identity.",
        "Creation of attractive content, consistent publishing, and professional management of your online community.",
        "Personalized designs and strategic sequences to build customer loyalty and increase conversions."
    ],
    additionalText = "Whether your focus is e-commerce, professional services, startups, or large corporations, we're building packages that will adapt to your vision and goals.",
    callToAction = {
        text: "Get ready to take your business to the next level with our new digital marketing plans!",
        subtext: "Ready to be the first to know more? Stay tuned!"
    }
} = Astro.props;

// Estado para mostrar la modal
let showModal = false;
let email = "";
let emailSent = false;
let error = "";

function openModal() {
  showModal = true;
  email = "";
  emailSent = false;
  error = "";
}

function closeModal() {
  showModal = false;
}

async function handleSubmit(e: any) {
  e.preventDefault();
  error = "";
  emailSent = false;
  // Validaci√≥n simple de email
  if (!email || !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email)) {
    error = "Por favor ingresa un email v√°lido.";
    return;
  }
  // Aqu√≠ podr√≠as hacer una petici√≥n a tu backend o servicio de newsletter
  emailSent = true;
}

const serviceID = import.meta.env.SECRET_EMAILJS_SERVICE_ID;
const templateID = import.meta.env.SECRET_EMAILJS_TEMPLATE_ID;
const userID = import.meta.env.SECRET_EMAILJS_USER_ID;

---

<div class="relative overflow-hidden w-full rounded-2xl bg-gradient-to-br from-secondary-blue/10 to-primary-yellow/30 backdrop-blur-sm border border-primary-cyan/20 p-12">
    
    <div class="space-y-8">
        <!-- Title Section -->
        <h2 class="text-4xl md:text-5xl font-bold text-white">
            {title.prefix} <span class="text-primary-cyan">{title.highlighted}</span> {title.suffix}
        </h2>

        <!-- Description -->
        <p class="text-lg text-gray-300">
            {description}
        </p>

        <!-- Features Section -->
        <div class="space-y-6">
            <h3 class="text-2xl font-bold text-primary-yellow">What will these new plans include?</h3>
            <ul class="space-y-4 text-white">
                {features.map(feature => (
                    <li class="flex items-start gap-2">
                        <span class="text-primary-cyan mt-1">‚Ä¢</span>
                        <span>{feature}</span>
                    </li>
                ))}
            </ul>
        </div>

        <!-- Additional Text -->
        <p class="text-lg text-gray-300">
            {additionalText}
        </p>

        <!-- Call to Action -->
        <div class="text-center space-y-2">
            <p class="text-xl font-bold text-primary-yellow">
                {callToAction.text}
            </p>
            <p class="text-lg text-primary-cyan">
                {callToAction.subtext}
            </p>
        </div>

        <!-- Newsletter Subscription -->
        <div class="flex flex-col items-center justify-center mt-8">
            <p class="text-white mb-4">Stay up to date with our news</p>
            <div class="flex gap-2">
              <button
                type="button"
                class="px-6 py-3 font-semibold rounded-full transition-colors group flex justify-center items-center gap-2 bg-primary-yellow text-theme-deepblue hover:bg-primary-yellow/90 focus:outline-none"
                onclick="document.getElementById('comming-soon-modal').classList.remove('invisible')"
              >
                <span>{secondaryButton.text}</span>
                <!-- Aqu√≠ puedes incluir el icono si lo deseas -->
              </button>
            </div>
        </div>
    </div>
    <Particles client:idle
    className="absolute inset-0 z-0"
    quantity={100}
    ease={80}
    color="#F2FF41"
    refresh
  />
  <BorderBeam client:idle duration={5} size={400} />
</div>

<div id="comming-soon-modal" class="invisible fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm">
  <div class="relative bg-gradient-to-br from-secondary-blue/90 to-primary-yellow/30 border border-primary-cyan/40 rounded-2xl shadow-2xl p-8 w-full max-w-md mx-4 animate-fade-in">
    <button class="absolute top-3 right-3 text-primary-cyan hover:text-primary-yellow text-2xl" type="button" onclick="document.getElementById('comming-soon-modal').classList.add('invisible')" aria-label="Cerrar modal">&times;</button>
    <h3 class="text-2xl font-bold text-primary-yellow mb-2">¬°Suscr√≠bete para novedades!</h3>
    <p class="text-gray-200 mb-4">D√©janos tu email y te avisaremos cuando lancemos nuestros nuevos planes.</p>
    <form id="comming-soon-form"
      data-service-id={serviceID}
      data-template-id={templateID}
      data-user-id={userID}
      class="flex flex-col gap-4">
      <input
        type="email"
        id="comming-soon-email"
        name="email"
        class="rounded-full px-4 py-2 border border-primary-cyan bg-white/80 text-theme-deepblue focus:outline-none focus:ring-2 focus:ring-primary-yellow transition"
        placeholder="Tu email..."
        required
      />
      <div id="comming-soon-error" class="text-red-400 text-sm"></div>
      <button
        type="submit"
        class="bg-primary-yellow text-theme-deepblue font-bold rounded-full px-4 py-2 hover:bg-primary-yellow/90 transition-colors hover:cursor-pointer"
      >
        Suscribirme
      </button>
    </form>
  </div>
</div>

<script>
    // @ts-ignore
    import emailjs from '@emailjs/browser';

    document.addEventListener('astro:page-load', () => {
        const form = document.getElementById('comming-soon-form') as HTMLFormElement;
        const emailInput = document.getElementById('comming-soon-email') as HTMLInputElement;
        const errorDiv = document.getElementById('comming-soon-error');
        const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement;
        const modal = document.getElementById('comming-soon-modal');

        if (form && emailInput && errorDiv && submitButton) {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                e.stopPropagation();
                errorDiv.textContent = '';
                const email = emailInput.value.trim();

                if (!email || !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email)) {
                    errorDiv.textContent = 'Por favor ingresa un email v√°lido.';
                    return false;
                }

                submitButton.disabled = true;
                submitButton.textContent = 'Enviando...';

                const serviceID = form.dataset.serviceId;
                const templateID = form.dataset.templateId;
                const userID = form.dataset.userId;

                if (!serviceID || !templateID || !userID) {
                    errorDiv.textContent = 'Error de configuraci√≥n. Por favor, intenta m√°s tarde.';
                    submitButton.disabled = false;
                    submitButton.textContent = 'Suscribirme';
                    return false;
                }

                try {
                    await emailjs.init(userID);
                    await emailjs.sendForm(serviceID, templateID, form);

                    form.innerHTML = `
                        <div class="text-center space-y-4">
                            <div class="text-primary-cyan font-semibold text-xl">¬°Gracias por suscribirte! üéâ</div>
                            <p class="text-gray-200">Te mantendremos informado sobre nuestros nuevos planes de marketing digital.</p>
                        </div>
                    `;
                    setTimeout(() => {
                        if (modal) {
                            modal.classList.add('invisible');
                        }
                    }, 3000);
                } catch (error) {
                    console.error('Error al enviar el formulario:', error);
                    errorDiv.textContent = 'Error al enviar el formulario. Por favor, intenta de nuevo.';
                    submitButton.disabled = false;
                    submitButton.textContent = 'Suscribirme';
                }
                return false;
            });
        }
    });
</script>
