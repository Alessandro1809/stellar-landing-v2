---
import Button from "./Button.astro";
import Toast from "./Toast.astro";

interface Props {
    isOpen?: boolean;
    buttonId: string;
}

const { 
    isOpen = false,
    buttonId
} = Astro.props;

---

<Toast />

<!-- Modal -->
<div 
    data-pricing-modal
    data-button-id={buttonId}
    class:list={[
        "fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center transition-all duration-300 z-[999]",
        isOpen ? "opacity-100" : "opacity-0 pointer-events-none"
    ]}
>
    <div class="bg-theme-deepblue border border-primary-yellow/30 rounded-lg p-6 w-full max-w-md mx-4 relative mt-12">
        <button 
            class="absolute top-4 right-4 text-gray-400 hover:text-white"
            type="button"
            data-close-modal
        >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>

        <h3 class="text-2xl font-bold text-primary-cyan mb-6">Inquiry about <span data-plan-name></span></h3>

        <form class="space-y-6" data-pricing-form>
            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Your Name</label>
                <input 
                    type="text" 
                    name="nombre"
                    class="w-full bg-theme-deepblue border border-primary-yellow/30 rounded-lg p-3 text-white focus:outline-none focus:border-primary-yellow"
                    required
                    placeholder="John Doe"
                />
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Your Email</label>
                <input 
                    type="email" 
                    name="email"
                    class="w-full bg-theme-deepblue border border-primary-yellow/30 rounded-lg p-3 text-white focus:outline-none focus:border-primary-yellow"
                    required
                    placeholder="your@email.com"
                />
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Company Name (Optional)</label>
                <input 
                    type="text" 
                    name="empresa"
                    class="w-full bg-theme-deepblue border border-primary-yellow/30 rounded-lg p-3 text-white focus:outline-none focus:border-primary-yellow"
                    placeholder="Your Company"
                />
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Selected Plan</label>
                <input 
                    type="text" 
                    name="plan"
                    class="w-full bg-theme-deepblue border border-primary-yellow/30 rounded-lg p-3 text-white focus:outline-none focus:border-primary-yellow"
                    readonly
                />
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Message</label>
                <textarea 
                    name="mensaje"
                    rows="4"
                    class="w-full bg-theme-deepblue border border-primary-yellow/30 rounded-lg p-3 text-white focus:outline-none focus:border-primary-yellow resize-none"
                    required
                ></textarea>
            </div>

            <div class="flex justify-end gap-3">
                <button 
                    type="button"
                    class="px-6 py-2 border-2 border-primary-yellow text-white hover:bg-white/10 font-semibold rounded-full transition-colors"
                    data-cancel-inquiry
                >
                    Cancel
                </button>
                <button 
                    type="submit"
                    class="px-6 py-2 bg-primary-yellow text-theme-deepblue hover:bg-primary-yellow/90 font-semibold rounded-full transition-colors"
                >
                    Send Inquiry
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    function initPricingModal() {
        const modals = document.querySelectorAll<HTMLElement>('[data-pricing-modal]');
        
        modals.forEach(modal => {
            const closeBtn = modal.querySelector<HTMLButtonElement>('[data-close-modal]');
            const cancelBtn = modal.querySelector<HTMLButtonElement>('[data-cancel-inquiry]');
            const form = modal.querySelector<HTMLFormElement>('[data-pricing-form]');
            const planNameSpan = modal.querySelector<HTMLElement>('[data-plan-name]');
            const planInput = modal.querySelector<HTMLInputElement>('input[name="plan"]');
            
            const closeModal = () => {
                modal.classList.add('opacity-0', 'pointer-events-none');
                if (form) form.reset();
            };

            closeBtn?.addEventListener('click', closeModal);
            cancelBtn?.addEventListener('click', (e) => {
                e.preventDefault();
                closeModal();
            });

            form?.addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const formData = new FormData(form);

                try {
                    const response = await fetch('/api/contact', {
                        method: 'POST',
                        body: formData
                    });

                    const data = await response.json();

                    if (response.ok) {
                        window.showToast('¡Inquiry sent successfully!', 'success');
                        closeModal();
                    } else {
                        window.showToast(data.message || 'Error sending inquiry', 'error');
                    }
                } catch (error) {
                    window.showToast('Error sending inquiry', 'error');
                }
            });

            // Exponer función para abrir el modal
            (window as any).openPricingModal = (planName: string, planDetails: string) => {
                if (planNameSpan) planNameSpan.textContent = planName;
                if (planInput) {
                    planInput.value = planDetails;
                }
                if (form) {
                    const messageArea = form.querySelector<HTMLTextAreaElement>('textarea[name="mensaje"]');
                    if (messageArea) {
                        messageArea.value = `I'm interested in the ${planName} plan. Please provide more information about the following services:\n\n${planDetails}`;
                    }
                }
                modal.classList.remove('opacity-0', 'pointer-events-none');
            };
        });
    }

    // Inicializar en carga de página y después de navegación
    document.addEventListener('astro:page-load', initPricingModal);
    initPricingModal();
</script> 